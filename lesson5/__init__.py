"""# Создайте словарь, где хранится информация о количестве выпечки. Ключами будут str, значениями — int. Не
используйте вывод на печать, код в конце задания сам всё проверит. # # Булочки с яблоком — 4. # Конвертики с творогом
— 7. # Крендельки с вареньем — 4.

bakery = {
    "Булочки с яблоком": 4,
    "Конвертики с творогом": 7,
    "Крендельки с вареньем": 4,
}

print(bakery.get(input("Key: ")))


# Создайте словарь, где хранится информация о количестве студентов в разных группах.
# Ключами словаря должны быть группы (int), значениями — количество человек в группе (int).
#
# 1 — 30
# 2 — 22
# 3 — 18
# 4 — 12

groups = {1: 30, 2: 22, 3: 18, 4: 12}

print(groups.get(int(input("Group: "))))


# Создайте словарь, где хранится информация о том, на какие курсы набирают студентов.
# Ключи — str, значения — bool.
#
# Python — да.
# Java — да.
# Kotlin — нет.
# Rust — нет.

courses = {"Python": True, "Java": True, "Kotlin": False, "Rust": False}

print(courses.get(input("courses: ")))


# У вас есть словарь городов и погоды в них.
# Получите у пользователя название города и выведите погоду.
# Гарантируется, что пользователь вводит только те города, которые есть в словаре.
#
# Пример ввода:
# Багдад

# Пример вывода:
# 14

weather = {
    "Москва": -22,
    "Новосибирск": -8,
    "Екатеринбург": -9,
    "Хабаровск": -29,
}

city = input("City: ")

if city not in weather:
    print("City not found")
else:
    print(weather[city])


# У вас есть список городов, где для каждого города обозначается, есть ли осадки.
# Со стандартного ввода подается название города. Выведите, есть ли осадки.
#
# Пример ввода:
# Москва

# Пример вывода:
# Есть осадки

# Пример ввода:
# Екатеринбург

# Пример вывода:
# Нет осадков

weather = {
    "Москва": True,
    "Новосибирск": True,
    "Екатеринбург": False,
    "Хабаровск": True,
}

location = input("City: ")

if location in weather:
    if weather[location]:
        print("Есть осадки")
    else:
        print("Нет осадков")
else:
    print("Город не найден")

# У вас есть словарь с баллами студентов, пользователь вводит имя студента.
# Выведите оценку по формуле.
# 81 и выше — это A.
# 61–80 — это B.
# 0–60 — это C.
#
# Пример ввода:
# Алиса

# Пример вывода:
# 70 баллов, оценка B


students = {"Алиса": 70, "Эльдар": 20, "Агата": 40, "Ярослав": 84}

user_input = input("Student name: ")

if user_input in students:
    if students[user_input] >= 81:
        print(f"{students[user_input]} баллов, оценка A")
    elif 61 <= students[user_input] <= 80:
        print(f"{students[user_input]} баллов, оценка B")
    elif 0 <= students[user_input] <= 60:
        print(f"{students[user_input]} баллов, оценка C")
    else:
        print("Баллы не могут быть отрицательными.")
else:
    print("Такого студента нет")


# Алиса и Борис договорились придумать названия для любимых мест в городе,
# где они живут. На всякий случай, если какое-то место забудется, таблица соответствий есть в словаре.
# Вам представлена таблица. Составьте из нее словарь.
# При передаче на стандартный инпут кодового названия верните расшифровку или адрес.
#
# Пример ввода:
# Безумный Макс

# Пример вывода:
# Памятник Максиму Горькому перед ТЮЗом

# Каньон
# Котлован заброшенной стройки на пл. Яхтенной

# Убежище
# Сквер рядом с историческим дотом на севере

# Пентагон
# Пятиэтажки на улице Ленина

# Безумный Макс
# Памятник Максиму Горькому перед ТЮЗом

# Централь
# Линии подачи ТЭЦ

# Улитки
# Улица Литке, д. 6

locations = {
    "Каньон": "Котлован заброшенной стройки на пл. Яхтенной",
    "Убежище": "Сквер рядом с историческим дотом на севере",
    "Пентагон": "Пятиэтажки на улице Ленина",
    "Безумный Макс": "Памятник Максиму Горькому перед ТЮЗом",
    "Централь": "Линии подачи ТЭЦ",
    "Улитки": "Улица Литке, д. 6",
}

user_input = input("Location: ")

if user_input in locations:
    print(locations[user_input])
else:
    print("Такого места нет")


# У вас есть список слов. Составьте словарь в формате «слово: количество букв».
# Не печатайте словарь самостоятельно: код для проверки, который его распечатывает, уже написан.
# Эта задача сложнее остальных. Если запутались, то подсказка внизу.
#
# Формат словаря:
# word_count ={
# "Желание": 7,
# "Семнадцать": 10,
# ...
# "Печь": 4,
# }

# Пример вывода:
# 7
# 10
# 4

keywords = ["Желание", "Семнадцать", "Ржавый", "Пропуск", "Печь"]

word_count = {}

for keyword in keywords:
    word_count[keyword] = len(keyword)

# print(word_count.get(input("keyword: ")))

for v in word_count.values():
    print(v)

# Пользователь вводит со стандартного ввода по очереди год, месяц и день рождения.
# Запишите в словарь в формате:
#
# {
# "year": 2000,
# "month": 6,
# "day": 6,
# }

year = input("year: ")
month = input("month: ")
day = input("day: ")

birth_date = {
    "year": year,
    "month": month,
    "day": day,
}

print(" ".join([x for x in birth_date.keys()]))
print(" ".join([str(x) for x in birth_date.values()]))

# У вас есть словарь, который содержит перевод цифр в слова.
# Дополните его, не редактируя первую строчку кода.
#
# Данные для добавления:
#
# 4: "four",
# 5: "five",
# 6: "six",
# 7: "seven",
# 8: "eight",
# 9: "nine",

numbers = {
    1: "one",
    2: "two",
    3: "three",
}

numbers[4] = "four"
numbers[5] = "five"
numbers[6] = "six"
numbers[7] = "seven"
numbers[8] = "eight"
numbers[9] = "nine"

print("_".join([str(x) for x in numbers]))
print("_".join(numbers.values()))


# У вас есть словарь. Со стандартного ввода подается сперва отдельной строкой ключ,
# затем отдельной строкой значение.
# Добавьте новую пару «ключ-значение».

shopping_list = {
    "Справочник по Python": 2200,
    "Блокнот в клеточку": 800,
    "Набор карандашей": 650,
}

new_key = input("new_key: ")
new_value = input("new_value: ")

shopping_list[new_key] = new_value

print("_".join(shopping_list))
print("_".join([str(x) for x in shopping_list.values()]))

# У вас есть словарь, описывающий количество студентов в разных группах.
# Удалите группы с ключами 2, 3, 5.

students = {1: 25, 2: 18, 3: 21, 4: 18, 5: 22, 6: 51}

del students[2]
students.pop(3)
students.pop(5)

print("_".join([str(x) for x in students]))
print("_".join([str(x) for x in students.values()]))


# У вас есть словарь со списком слов.
# Со стандартного ввода подается ключ, соответствующий ключ нужно удалить из словаря.

words = {
    "owl": "сова",
    "duck": "утка",
    "mouse": "мышь",
    "sheep": "овца",
    "cat": "кошка",
}

user_input = input("user_input: ")

del words[user_input]


print("_".join([str(x) for x in words]))
print("_".join([str(x) for x in words.values()]))


# У вас есть список покупок. Выведите все названия.

# Пример вывода:
# Мандаринки
# ...
# Хлопушки

gifts = {
    "Мандаринки": 150,
    "Шоколадные конфеты": 200,
    "Гирлянда": 400,
    "Набор шаров": 300,
    "Хлопушки": 150,
}

for gift in gifts:
    print(gift)

# У вас есть список покупок. Выведите сумму.
#
# Пример вывода:
# 1760

gifts = {
    "Мандаринки": 150,
    "Шоколадные конфеты": 200,
    "Гирлянда": 400,
    "Набор шаров": 300,
    "Хлопушки": 150,
}

summary = 0
for cost in gifts.values():
    summary += cost

print(summary)


# У вас есть список гостей с отметкой о том, кто придет. Выведите только тех, кто придет.
#
# Пример вывода:
# Эльдар
# Алиса

guests = {
    "Алиса": True,
    "Эльдар": False,
    "Агата": False,
    "Ярослав": True,
}

for guest, visit in guests.items():
    if visit:
        print(guest)


# У вас есть список городов с отметкой о том, какая там температура.
# Выведите только те города, где больше +10.
#
# Пример вывода:
# Архангельск
# Норильск

locations = {
    "Джакарта": 25,
    "Норильск": -34,
    "Бангкок": 21,
    "Якутск": -52,
    "Москва": 5,
}

for loc, temp in locations.items():
    if temp > 10:
        print(loc)


# Задание на обход словаря
# Борис и Алиса отправились на чемпионат области по разгадыванию задач.
# В списке финалистов 10 участников.
#
# Выведите всех, кто набрал больше 100 баллов, в формате:
# Кристина: 110

winners = {
    "Евгения": 93,
    "Теодор": 131,
    "Машуля": 119,
    "Алиса": 98,
    "Борис": 101,
    "Акгулим": 82,
    "Агелим": 82,
    "Давид": 93,
    "Зауреш": 107,
    "Кристина": 110,
}

for winner, points in winners.items():
    if points > 100:
        print(f"{winner}: {points}")

# Задание на работу с ключами и значениями
# Свою библиотеку книг по шифрам Алиса хранит в словаре.
#
# Выведите отдельно авторов, отдельно книги, затем вместе авторов и книги.
#
# Пример вывода:
# -
# Книги:
# Книга шифров
# Практическая криптография
# Криптономикон
# Взломщики кодов
# Криптология
# -
# Авторы:
# Саймон Сингх
# Брюс Шнайер
# Нил Стивенсон
# Дэвид Кан
# Альбрехт Бойтельспахер
# -
# Библиотека:
# Саймон Сингх - Книга шифров
# Брюс Шнайер - Практическая криптография
# Нил Стивенсон - Криптономикон
# Дэвид Кан - Взломщики кодов
# Альбрехт Бойтельспахер - Криптология

books = {
    "Саймон Сингх": "Книга шифров",
    "Брюс Шнайер": "Практическая криптография",
    "Нил Стивенсон": "Криптономикон",
    "Дэвид Кан": "Взломщики кодов",
    "Альбрехт Бойтельспахер": "Криптология",
}

all_authors = "\n".join(author for author in books)
all_books = "\n".join(book for book in books.values())

print(f"-\nКниги:\n{all_books}\n-\nАвторы:\n{all_authors}\n-")

print("Библиотека:")
for author, book in books.items():
    print(f"{author} - {book}")

# test
emails = {
    "Денис": "den@gamil.com",
    "Алиса": "lisa@amil.com",
    "Bobi": "bob_bob@gamil.com",
}

value = emails["Василиса"]


test2 = {
    True: "den@gamil.com",
    False: "lisa@amil.com",
    10.2: "bob_bob@gamil.com",
    "Hm": None,
    # [10.2, 5, True]: "mary@gamil.com",
}

print(test2)


first_dict = {"a": "alpha", "b": "bravo"}
second_dict = {"c": "charlie", "d": "delta"}

my_dict = first_dict * 2
# my_dict = ... - ...
"""
letter_dict = {"a": "alpha", "b": "bravo"}

del letter_dict["a"]
del letter_dict["b"]

print(letter_dict)
