"""# Выведите все элементы из предоставленного списка, по одному на каждой строке.

kings = ['Генрих', 'Людовик', 'Фридрих', 'Ричард']
for king in kings:
  print(king)
  


# Напишите программу, которая выведет все элементы из списка, каждый на отдельной строчке.

words = ["Alpha", "Bravo", "Charlie", "Delta", "Echo", "Foxtrot"]

for word in words:
    print(word)

# Возраст жильцов в доме варьируется от 0 до 99 лет. Вычислите средний возраст жильцов и выведите в виде целого числа.
# Пример ответа:
# 25

residents = [5, 3, 2, 20, 5, 30, 5, 34]
residents_count = 0
age_sum = 0

for resident in residents:
    age_sum += resident
    residents_count += 1

result = age_sum//residents_count

print(result)


# Выведите все элементы списка, кроме слова «Пропуск». Каждый элемент должен быть выведен на новой строке.
keywords = ["Желание", "Семнадцать", "Пропуск", "Ржавый", "Пропуск", "Печь" ]

for key in keywords:
    if key != "Пропуск":
        print(key)



# Правила игры в дартс такие: за каждый бросок вы получаете от 1 до 10 очков. Все очки, которые вы набрали, складываются. Но если вы промахиваетесь (набираете 0), то теряете 10 очков.
# У вас есть список бросков, посчитайте сумму.
# Пример ответа:
# 10

throws = [5, 3, 2, 10, 5, 0, 5]
points = 0

for throw in throws:
    if throw != 0:
        points += throw
    else:
        points -= 10

print(points)

# Каждый день ведется наблюдение за погодой. Посчитайте, сколько дней за неделю было солнечно, дождливо, пасмурно, и выведите.
# Пример вывода:
# Солнечных дней: 2
# Пасмурных дней: 3
# Дождливых дней: 1

weather = ["солнечно", "дождливо", "пасмурно",
           "солнечно", "дождливо", "дождливо",
           "солнечно"]

days_sunny = 0
days_gloomy = 0
days_rainy = 0

for i in range(len(weather)):
    if weather[i] == "солнечно":
        days_sunny += 1
    elif weather[i] == "дождливо":
        days_rainy += 1
    else:
        days_gloomy += 1

print(f"Солнечных дней: {days_sunny}")
print(f"Пасмурных дней: {days_gloomy}")
print(f"Дождливых дней: {days_rainy}")

# Выведите «Программа работает» 5 раз с помощью цикла while.
i = 0
while i < 5:
    print("Программа работает")
    i += 1

# Выведите числа от 1 до 10 (включительно) с помощью цикла while.
# Пример вывода:
# 1
# 2
# 3
# ...
# 10

i = 1
while i <= 10:
    print(i)
    i += 1

# Выведите числа от 0 до 100 (включительно) с шагом в 10 с помощью цикла while.
# Пример вывода:
# 0
# 10
# 20
# 30
# ...
# 100

i = 0

while i <= 100:
    print(i)
    i += 10


# При открытии вклада сумма на счете равна 0. Каждый месяц пользователь пополняет свой вклад на одну и ту же сумму — 1500.
# Выводите баланс счета за каждый месяц, пока сумма не начнет превышать 10 000.
# Пример вывода:
# Баланс счета = 1500
# Баланс счета = 3000
# ...
# Баланс счета = 10500

deposit = 0
replenishment = 1_500
while deposit < 10_000:
    deposit += replenishment
    print(f"Баланс счета = {deposit}")


# При открытии вклада сумма на счете равна 0. Каждый месяц пользователь пополняет свой вклад на одну и ту же сумму, ее нужно получить со стандартного ввода (input()).
# Выводите баланс счета за каждый месяц, пока сумма не достингет 12 000.
# Пример вывода:
# Баланс счета = 2000
# Баланс счета = 4000
# ...
# Баланс счета = 12000

deposit = 0
replenishment = int(input("replenishment: "))

while deposit + replenishment <= 12_000:
    deposit += replenishment
    print(f"Баланс счета = {deposit}")


# При открытии вклада сумма на счете равна 0.
# Каждый месяц пользователь пополняет этот счет на Х, причем каждый месяц Х разный.
# Сумма пополнения является целым числом и указывается с помощью input().
# Выведите количество пополнений, после которого сумма на счете станет равна или больше 1000.
# Пример ввода:
# 500
# 500
# Пример вывода:
# 2

deposit = 0
months = 0

while deposit < 1_000:
    fulfillment = int(input("fulfillment: "))
    deposit += fulfillment
    months += 1

print(months)

# В первый день спортсмен пробежал 2 километра, затем он каждый день увеличивал пробег на 20% от предыдущего значения.
# Определите номер дня, когда пробег спортсмена составит не менее 5 километров. Выведите ответ в формате целого числа.

day = 1
distance = 2.0
wish_distance = 5

while distance < wish_distance:
    distance *= 1.2
    day += 1

print(f"Distance: {distance}")
print(f"Day: {day}")

# Со стандартного ввода (input) вводятся значения, каждое на отдельной строке. В конце вводится stop.
# Получите значения, посчитайте их количество, выведите это количество.
# Используйте синтаксис while ... break для этого задания.
# Пример ввода:
# 1
# 2
# 1
# 2
# stop
# Пример вывода:
# 4

number_of_elements = 0

while True:
    user_input = input("Type number: ")
    if user_input != "stop":
        number_of_elements += 1
    else:
        break
print(number_of_elements)

# Пользователь вводит список своих расходов, по одному числу на строке с помощью input().
# Список неопределенной длины, но в конце пользователь вводит «стоп».
# Посчитайте сумму всех расходов и выведите ее.
# Обратите внимание, тренажер устроен так, что если вы продолжите считывать значения после того,
# как они закончились, программа «упадет» с ошибкой.
# Пользователь всегда вводит по крайней мере одно значение до того, как введет «стоп».

expenses = 0
expenses_list = []

while True:
    user_input = input("Type number: ")
    if user_input != "стоп":
        expenses_list.append(int(user_input))
    else:
        print(sum(expenses_list))
        break

# Пользователь вводит список своих покупок с помощью input(), по одной за раз.
# Список неопределенной длины, но в конце пользователь вводит «стоп».
# Используйте while ... break для этого задания.
# Запишите все полученные значения в список shopping_list.
# Не выводите содержимое списка — код в конце задания сделает это за вас.
# Обратите внимание, тренажер устроен так, что если вы продолжите считывать
# значения после того, как они закончились, программа «упадет» с ошибкой.
# Пользователь всегда вводит по крайней мере одно значение до того, как введет «стоп».

shopping_list = []

while True:
    user_input = input("Введите покупку: ")
    if user_input != "стоп":
        shopping_list.append(user_input)
    else:
        break

# Не удаляйте строку ниже, она нужна для проверки
[print(el) for el in shopping_list]

# Напишите программу, которая перебирает игрушки в списке и выводит их, но завершит поиск (выйдет из цикла), когда машинка найдена.
for toy in ['плюшевый мишка', 'мячик', 'машинка', 'конструктор', 'забытая конфета']:
    print(toy)
    if toy == "машинка":
        break
# Используя конструкцию for in range(), выведите последовательность чисел от 0 до 7, каждое число на отдельной строке.
# Пример ответа:
#
# 0
# 1
# 2
# 3
# ...
# 7
for i in range(8):
  print(i)

# Используя конструкцию for in range(), выведите список из 8 степеней числа 2.
# Пример ответа:
#
# 1
# 2
# 4
# ...
# 128

for i in range(8):
  print(2**i)

# Со стандартного ввода подается число X.
# Используя конструкцию for in range(),
# выведите последовательность чисел от 1 до X (не включая Х),
# каждое число на отдельной строке.
# Пример ответа:
#
# 1
# 2
# 3
# ...
# 7

x = int(input("x: "))

for i in range(1, x):
  print(i)

# С помощью конструкции for in range() выведите последовательность чисел от 0 до 100 с шагом в 10.
# Пример вывода:
# 0
# 10
# 20
# ...
# 100

for i in range(0, 101, 10):
  print(i)

# Получите со стандартного ввода два числа Х и У.
# С помощью конструкции for in range() выведите все числа, которые находятся между ними.
# Пример вывода (для X = 2, Y = 7): 3 4 5 6

x = int(input("x: "))
y = int(input("y: "))

for i in range(x + 1, y):
    print(i)

# С помощью конструкции for in range() выведите список, начиная с элемента "Alpha".
# Пример вывода:
# Alpha
# Echo
# ...
# Foxtrot

words = ["Zero", "Alpha", "Bravo", "Charlie", "Delta", "Echo", "Foxtrot"]

for i in range(1, len(words)):
    print(words[i])

# С помощью конструкции for in range() выведите первые пять элементов списка.
# Пример вывода:
# Alpha
# Bravo
# ...
# ...
# Echo
words = ["Alpha", "Bravo", "Charlie", "Delta", "Echo",
         "Foxtrot", "Golf", "Hotel", "India", "Juliett",
         "Kilo", "Lima", "Mike", "November", "Oscar",
         "Papa", "Quebec", "Romeo", "Sierra", "Tango",
         "Uniform", "Victor", "Whiskey", "X-ray", "Yankee",
         "Zulu"]

for i in range(5):
    print(words[i])


# С помощью конструкции for in range() выведите последние пять элементов списка.
# Пример вывода:
# Victor
# Whiskey
# ...
# ...
# Zulu

words = ["Alpha", "Bravo", "Charlie", "Delta", "Echo",
         "Foxtrot", "Golf", "Hotel", "India", "Juliett",
         "Kilo", "Lima", "Mike", "November", "Oscar",
         "Papa", "Quebec", "Romeo", "Sierra", "Tango",
         "Uniform", "Victor", "Whiskey", "X-ray", "Yankee",
         "Zulu"]

for i in range(len(words)-5,len(words)):
    print(words[i])

# У вас есть три списка. Запустите цикл и выведите на каждой строке значение по индексу из каждого списка.
# Пример:
# пт - это рабочий день, а вечером гулять.
# вс - это выходной день, а вечером страдать.

weekdays = ["пн", "вт", "ср", "чт", "пт", "сб", "вс"]
work = [True, True, True, True, True, False, False]
plans = ["за покупками", "отдыхать", "играть", "лениться", "гулять", "кутить", "страдать"]

for i in range(len(weekdays)):
    if work[i]:
        print(f"{weekdays[i]} - это рабочий день, а вечером {plans[i]}.")
    else:
        print(f"{weekdays[i]} - это выходной день, а вечером {plans[i]}.")

numbers = [1, 2, 3, 4, 5]

for num in numbers:
  if num in [2,4]:
     continue
  print(num, end=" ")


# У вас есть программа, в которой выводятся все слова.
# Допишите программу, не удаляя ничего, так, чтобы слова короче 3 букв не выводились.
words = ["int", "pk", "get", "round", "id", "if"]

for word in words:
    if len(word) < 3:
        continue
    print(word) # Не меняйте эту строку

# У вас есть программа, в которой все числа из списка суммируются.
# Допишите программу, не удаляя ничего, так, чтобы суммировались только положительные числа.

numbers = [-4, 4, 1, -3, 15, -2, 10]

total = 0

for num in numbers:
    if num < 0:
        continue
    total += num # Не меняйте эту строку

print(total)

# Напишите цикл, который выведет 18 этажей, пропустив номера 4 и 13.
# Пример вывода:
# 1 этаж
# 2 этаж
# ...
# 18 этаж

for floor in range(1, 19):
    if floor == 4 or floor == 13:
        continue
    print(f"{floor} этаж")

# Напишите код, чтобы вывести список с помощью генератора списков.

items = ["Alpha", "Bravo", "Charlie"]

[print(item) for item in items]

# Напишите код, чтобы вывести цифры от 0 до 5 с помощью генератора списков и range.
[print(item) for item in range(6)]

# Отфильтруйте список из строк, которые содержат "р".
words = ["ракушка", "кукушка", "рыбка"]
words_with_r = [word for word in words if "р" in word]

[print(w) for w in words_with_r]

letters = ["A", "B", "C", "D", "E", "F"]

for i, letter in enumerate(letters, start=1):
  print(i, letter)

items = [True, True, False, True, True, False]

for index, value in enumerate(items, start=1):
  if value:
      print(index)"""

is_raining = bool(input("Is raining: "))
print(type(is_raining))

if is_raining == True:
    print(1)
else:
    print(0)